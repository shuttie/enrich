name: CI

on:
  push:
    tags:
      - '*'
    branches:
      - master
      - develop
      - 'snapshot/**'
  pull_request:

jobs:
  publish_docker:
    if: startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/snapshot')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - kinesis
    steps:
    - uses: actions/checkout@v2
      if: startsWith(github.ref, 'refs/tags/')
    - name: Checkout with history for version info
      uses: actions/checkout@v2
      if: startsWith(github.ref, 'refs/heads/snapshot')
      with:
        fetch-depth: 0
    - uses: coursier/cache-action@v6
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Docker login
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Get current version
      if: startsWith(github.ref, 'refs/tags/')
      id: ver
      run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
    - name: Get current version (snapshot)
      if: startsWith(github.ref, 'refs/heads/snapshot')
      id: ver-snapshot
      run: |
        export SNAPSHOT_VERSION=$(sbt common/version -Dsbt.log.noformat=true | grep 'SNAPSHOT' | awk '{ print $2 }')
        echo "::set-output name=tag::$SNAPSHOT_VERSION"
    - name: Get app package name
      id: packageName
      run: |
        export PACKAGE_NAME=$(sbt "project ${{ matrix.app }}" dockerAlias -Dsbt.log.noformat=true | sed -n '/\[info\]/ s/\[info\] //p' | tail -1 | tr -d '\n' | cut -d":" -f1)
        echo "::set-output name=package_name::$PACKAGE_NAME"
    - name: Get app base directory
      id: baseDirectory
      run: |
        export BASE_DIRECTORY=$(sbt "project ${{ matrix.app }}" baseDirectory -Dsbt.log.noformat=true | sed -n '/\[info\]/ s/\[info\] //p' | tail -1 | tr -d '\n')
        echo "::set-output name=directory::$BASE_DIRECTORY"
    - name: Stage the Docker build
      run: sbt "project ${{ matrix.app}}" docker:stage
    - name: Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ steps.packageName.outputs.package_name }}
        tags: |
          type=raw,value=latest,enable=${{ !contains(steps.ver.outputs.tag, 'rc') && !contains(steps.ver-snapshot.outputs.tag, 'SNAPSHOT' )}}
          type=raw,value=${{ steps.ver.outputs.tag }},enable=${{ !contains(steps.ver.outputs.tag, 'SNAPSHOT') }}
          type=raw,value=${{ steps.ver-snapshot.outputs.tag }},enable=${{ contains(steps.ver-snapshot.outputs.tag, 'SNAPSHOT') }}
        flavor: |
          latest=false
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Push image
      uses: docker/build-push-action@v2
      with:
        context: ${{ steps.baseDirectory.outputs.directory }}/target/docker/stage
        file: ${{ steps.baseDirectory.outputs.directory }}/target/docker/stage/Dockerfile
        platforms: linux/amd64,linux/arm64/v8
        tags: ${{ steps.meta.outputs.tags }}
        push: true
